---
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslations } from "src/i18n/utils";

const supportedLocales = ["es", "en"] as const;
type Locale = (typeof supportedLocales)[number];

// Idioma actual
const currentLang = supportedLocales.includes(Astro.currentLocale as Locale)
  ? (Astro.currentLocale as Locale)
  : "es";

const translateUi = useTranslations(currentLang);

// Idioma alternativo
const otherLang = currentLang === "es" ? "en" : "es";
const label = otherLang.toUpperCase();

// Eliminar prefijo del idioma actual
const cleanPath = Astro.url.pathname.replace(/^\/(es|en)/, "") || "/";

// Generar la nueva ruta con el idioma alternativo
const switchTo = getRelativeLocaleUrl(otherLang, cleanPath);

// Funci√≥n para construir URL respetando que 'es' no lleva prefijo
function localePath(lang: Locale, path: string) {
  if (lang === "es") return path.startsWith("/") ? path : `/${path}`;
  else return `/en${path.startsWith("/") ? path : `/${path}`}`;
}

const homeHref = localePath(currentLang, "/");
const blogHref = localePath(currentLang, "/blog");
---

<header class="text-white py-4">
  <nav class="flex items-center justify-between max-w-7xl mx-auto">
    <a href={homeHref} class="flex items-center space-x-3">
      <img
        src="/public/img/profile.webp"
        alt="Foto de perfil"
        class="w-8 h-8 rounded-full object-cover"
      />
      <span class="font-bold tracking-wide">Arcibyte</span>
    </a>

    <div class="flex items-center space-x-6 text-sm font-mono text-neutral-300">
      <a
        href={blogHref}
        class="hover:text-white transition-colors duration-200"
      >
        {translateUi("nav.blog")}
      </a>

      <a
        href={switchTo}
        class="px-3 py-1 bg-lime-400 hover:bg-lime-300 text-[#101726] rounded-full text-xs font-semibold transition"
        aria-label={`Switch to ${label}`}
      >
        {label}
      </a>
    </div>
  </nav>
</header>
